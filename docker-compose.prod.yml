version: '3.3'services:  web:    build:      context: ./app      dockerfile: Dockerfile.prod    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000    volumes:      - ./app/:/usr/src/app/#      - static_volume:/home/app/web/staticfiles#      - media_volume:/home/app/web/mediafiles    expose:      - 8000    env_file:      - .env.prod    depends_on:      - db    restart: always  db:    image: postgres:15    volumes:      - ./appdata/postgres:/var/lib/postgresql/data/    env_file:      - .env.prod    restart: always  redis:    image: redis:latest    command: redis-server --port 6379    container_name: redis    ports:      - "6379:6379"    depends_on:      - db    restart: always  nginx:    build: ./nginx    volumes:      - static_volume:/home/app/web/staticfiles      - media_volume:/home/app/web/mediafiles    ports:      - "1337:80"    depends_on:      - web    restart: always  celery:    build: ./app    command: celery -A config.celery --workdir=. worker -l info    volumes:#      - static_volume:/static_volume/#      - media_volume:/media_volume/      - ./app/:/usr/src/app/    environment:      - CELERY_BROKER=redis://redis:6379/0      - CELERY_BACKEND=redis://redis:6379/0    env_file:      - .env.prod    depends_on:      - redis    restart: alwaysvolumes:#  postgres_data:  static_volume:  media_volume: